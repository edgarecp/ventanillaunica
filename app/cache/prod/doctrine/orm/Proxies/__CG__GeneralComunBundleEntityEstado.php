<?php

namespace Proxies\__CG__\General\ComunBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Estado extends \General\ComunBundle\Entity\Estado implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function PrePersist()
    {
        $this->__load();
        return parent::PrePersist();
    }

    public function PreUpdate()
    {
        $this->__load();
        return parent::PreUpdate();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setAbreviatura($abreviatura)
    {
        $this->__load();
        return parent::setAbreviatura($abreviatura);
    }

    public function getAbreviatura()
    {
        $this->__load();
        return parent::getAbreviatura();
    }

    public function setTipo($tipo)
    {
        $this->__load();
        return parent::setTipo($tipo);
    }

    public function getTipo()
    {
        $this->__load();
        return parent::getTipo();
    }

    public function addDerivacione(\Cps\Fludoc\AdmBundle\Entity\Derivacion $derivaciones)
    {
        $this->__load();
        return parent::addDerivacione($derivaciones);
    }

    public function removeDerivacione(\Cps\Fludoc\AdmBundle\Entity\Derivacion $derivaciones)
    {
        $this->__load();
        return parent::removeDerivacione($derivaciones);
    }

    public function getDerivaciones()
    {
        $this->__load();
        return parent::getDerivaciones();
    }

    public function addInforme(\Cps\Fludoc\ServicioBundle\Entity\Informe $informes)
    {
        $this->__load();
        return parent::addInforme($informes);
    }

    public function removeInforme(\Cps\Fludoc\ServicioBundle\Entity\Informe $informes)
    {
        $this->__load();
        return parent::removeInforme($informes);
    }

    public function getInformes()
    {
        $this->__load();
        return parent::getInformes();
    }

    public function addDocrec(\Cps\Fludoc\AdmBundle\Entity\Docrec $docrecs)
    {
        $this->__load();
        return parent::addDocrec($docrecs);
    }

    public function removeDocrec(\Cps\Fludoc\AdmBundle\Entity\Docrec $docrecs)
    {
        $this->__load();
        return parent::removeDocrec($docrecs);
    }

    public function getDocrecs()
    {
        $this->__load();
        return parent::getDocrecs();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombre', 'abreviatura', 'tipo', 'derivaciones', 'informes', 'docrecs');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}